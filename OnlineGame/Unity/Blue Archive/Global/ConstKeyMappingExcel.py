# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Global

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConstKeyMappingExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConstKeyMappingExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConstKeyMappingExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConstKeyMappingExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConstKeyMappingExcel
    def DragSensitivity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ConstKeyMappingExcel
    def PcInformationGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstKeyMappingExcel
    def ScrollWheelFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ConstKeyMappingExcel
    def RemoveKeycodeWord(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConstKeyMappingExcel
    def TutorialDialogTouchKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ConstKeyMappingExcelStart(builder):
    builder.StartObject(5)

def Start(builder):
    ConstKeyMappingExcelStart(builder)

def ConstKeyMappingExcelAddDragSensitivity(builder, dragSensitivity):
    builder.PrependFloat32Slot(0, dragSensitivity, 0.0)

def AddDragSensitivity(builder, dragSensitivity):
    ConstKeyMappingExcelAddDragSensitivity(builder, dragSensitivity)

def ConstKeyMappingExcelAddPcInformationGroupId(builder, pcInformationGroupId):
    builder.PrependInt64Slot(1, pcInformationGroupId, 0)

def AddPcInformationGroupId(builder, pcInformationGroupId):
    ConstKeyMappingExcelAddPcInformationGroupId(builder, pcInformationGroupId)

def ConstKeyMappingExcelAddScrollWheelFactor(builder, scrollWheelFactor):
    builder.PrependFloat32Slot(2, scrollWheelFactor, 0.0)

def AddScrollWheelFactor(builder, scrollWheelFactor):
    ConstKeyMappingExcelAddScrollWheelFactor(builder, scrollWheelFactor)

def ConstKeyMappingExcelAddRemoveKeycodeWord(builder, removeKeycodeWord):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(removeKeycodeWord), 0)

def AddRemoveKeycodeWord(builder, removeKeycodeWord):
    ConstKeyMappingExcelAddRemoveKeycodeWord(builder, removeKeycodeWord)

def ConstKeyMappingExcelAddTutorialDialogTouchKey(builder, tutorialDialogTouchKey):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(tutorialDialogTouchKey), 0)

def AddTutorialDialogTouchKey(builder, tutorialDialogTouchKey):
    ConstKeyMappingExcelAddTutorialDialogTouchKey(builder, tutorialDialogTouchKey)

def ConstKeyMappingExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return ConstKeyMappingExcelEnd(builder)
