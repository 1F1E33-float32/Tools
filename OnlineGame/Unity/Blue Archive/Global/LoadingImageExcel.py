# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Global

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LoadingImageExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LoadingImageExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLoadingImageExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # LoadingImageExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LoadingImageExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # LoadingImageExcel
    def ImagePathKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LoadingImageExcel
    def ImagePathJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LoadingImageExcel
    def DisplayWeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # LoadingImageExcel
    def ImagePathTh(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LoadingImageExcel
    def ImagePathTw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LoadingImageExcel
    def ImagePathEn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def LoadingImageExcelStart(builder):
    builder.StartObject(7)

def Start(builder):
    LoadingImageExcelStart(builder)

def LoadingImageExcelAddId(builder, id):
    builder.PrependInt64Slot(0, id, 0)

def AddId(builder, id):
    LoadingImageExcelAddId(builder, id)

def LoadingImageExcelAddImagePathKr(builder, imagePathKr):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(imagePathKr), 0)

def AddImagePathKr(builder, imagePathKr):
    LoadingImageExcelAddImagePathKr(builder, imagePathKr)

def LoadingImageExcelAddImagePathJp(builder, imagePathJp):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(imagePathJp), 0)

def AddImagePathJp(builder, imagePathJp):
    LoadingImageExcelAddImagePathJp(builder, imagePathJp)

def LoadingImageExcelAddDisplayWeight(builder, displayWeight):
    builder.PrependInt32Slot(3, displayWeight, 0)

def AddDisplayWeight(builder, displayWeight):
    LoadingImageExcelAddDisplayWeight(builder, displayWeight)

def LoadingImageExcelAddImagePathTh(builder, imagePathTh):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(imagePathTh), 0)

def AddImagePathTh(builder, imagePathTh):
    LoadingImageExcelAddImagePathTh(builder, imagePathTh)

def LoadingImageExcelAddImagePathTw(builder, imagePathTw):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(imagePathTw), 0)

def AddImagePathTw(builder, imagePathTw):
    LoadingImageExcelAddImagePathTw(builder, imagePathTw)

def LoadingImageExcelAddImagePathEn(builder, imagePathEn):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(imagePathEn), 0)

def AddImagePathEn(builder, imagePathEn):
    LoadingImageExcelAddImagePathEn(builder, imagePathEn)

def LoadingImageExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return LoadingImageExcelEnd(builder)
