# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Global

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ScenarioBGName_GlobalExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScenarioBGName_GlobalExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsScenarioBGName_GlobalExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ScenarioBGName_GlobalExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScenarioBGName_GlobalExcel
    def GroupName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioBGName_GlobalExcel
    def NameKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioBGName_GlobalExcel
    def NameTw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioBGName_GlobalExcel
    def NameAsia(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioBGName_GlobalExcel
    def NameNa(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioBGName_GlobalExcel
    def NameGlobal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioBGName_GlobalExcel
    def NameTeen(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def ScenarioBGName_GlobalExcelStart(builder):
    builder.StartObject(7)

def Start(builder):
    ScenarioBGName_GlobalExcelStart(builder)

def ScenarioBGName_GlobalExcelAddGroupName(builder, groupName):
    builder.PrependUint32Slot(0, groupName, 0)

def AddGroupName(builder, groupName):
    ScenarioBGName_GlobalExcelAddGroupName(builder, groupName)

def ScenarioBGName_GlobalExcelAddNameKr(builder, nameKr):
    builder.PrependUint32Slot(1, nameKr, 0)

def AddNameKr(builder, nameKr):
    ScenarioBGName_GlobalExcelAddNameKr(builder, nameKr)

def ScenarioBGName_GlobalExcelAddNameTw(builder, nameTw):
    builder.PrependUint32Slot(2, nameTw, 0)

def AddNameTw(builder, nameTw):
    ScenarioBGName_GlobalExcelAddNameTw(builder, nameTw)

def ScenarioBGName_GlobalExcelAddNameAsia(builder, nameAsia):
    builder.PrependUint32Slot(3, nameAsia, 0)

def AddNameAsia(builder, nameAsia):
    ScenarioBGName_GlobalExcelAddNameAsia(builder, nameAsia)

def ScenarioBGName_GlobalExcelAddNameNa(builder, nameNa):
    builder.PrependUint32Slot(4, nameNa, 0)

def AddNameNa(builder, nameNa):
    ScenarioBGName_GlobalExcelAddNameNa(builder, nameNa)

def ScenarioBGName_GlobalExcelAddNameGlobal(builder, nameGlobal):
    builder.PrependUint32Slot(5, nameGlobal, 0)

def AddNameGlobal(builder, nameGlobal):
    ScenarioBGName_GlobalExcelAddNameGlobal(builder, nameGlobal)

def ScenarioBGName_GlobalExcelAddNameTeen(builder, nameTeen):
    builder.PrependUint32Slot(6, nameTeen, 0)

def AddNameTeen(builder, nameTeen):
    ScenarioBGName_GlobalExcelAddNameTeen(builder, nameTeen)

def ScenarioBGName_GlobalExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return ScenarioBGName_GlobalExcelEnd(builder)
