# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Global

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Video_GlobalExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Video_GlobalExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsVideo_GlobalExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Video_GlobalExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Video_GlobalExcel
    def VideoId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Video_GlobalExcel
    def VideoPathkr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoTeenPathkr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoPathth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoTeenPathth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoPathtw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoTeenPathtw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoPathen(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoTeenPathen(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Video_GlobalExcelStart(builder):
    builder.StartObject(9)

def Start(builder):
    Video_GlobalExcelStart(builder)

def Video_GlobalExcelAddVideoId(builder, videoId):
    builder.PrependInt64Slot(0, videoId, 0)

def AddVideoId(builder, videoId):
    Video_GlobalExcelAddVideoId(builder, videoId)

def Video_GlobalExcelAddVideoPathkr(builder, videoPathkr):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(videoPathkr), 0)

def AddVideoPathkr(builder, videoPathkr):
    Video_GlobalExcelAddVideoPathkr(builder, videoPathkr)

def Video_GlobalExcelAddVideoTeenPathkr(builder, videoTeenPathkr):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(videoTeenPathkr), 0)

def AddVideoTeenPathkr(builder, videoTeenPathkr):
    Video_GlobalExcelAddVideoTeenPathkr(builder, videoTeenPathkr)

def Video_GlobalExcelAddVideoPathth(builder, videoPathth):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(videoPathth), 0)

def AddVideoPathth(builder, videoPathth):
    Video_GlobalExcelAddVideoPathth(builder, videoPathth)

def Video_GlobalExcelAddVideoTeenPathth(builder, videoTeenPathth):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(videoTeenPathth), 0)

def AddVideoTeenPathth(builder, videoTeenPathth):
    Video_GlobalExcelAddVideoTeenPathth(builder, videoTeenPathth)

def Video_GlobalExcelAddVideoPathtw(builder, videoPathtw):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(videoPathtw), 0)

def AddVideoPathtw(builder, videoPathtw):
    Video_GlobalExcelAddVideoPathtw(builder, videoPathtw)

def Video_GlobalExcelAddVideoTeenPathtw(builder, videoTeenPathtw):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(videoTeenPathtw), 0)

def AddVideoTeenPathtw(builder, videoTeenPathtw):
    Video_GlobalExcelAddVideoTeenPathtw(builder, videoTeenPathtw)

def Video_GlobalExcelAddVideoPathen(builder, videoPathen):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(videoPathen), 0)

def AddVideoPathen(builder, videoPathen):
    Video_GlobalExcelAddVideoPathen(builder, videoPathen)

def Video_GlobalExcelAddVideoTeenPathen(builder, videoTeenPathen):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(videoTeenPathen), 0)

def AddVideoTeenPathen(builder, videoTeenPathen):
    Video_GlobalExcelAddVideoTeenPathen(builder, videoTeenPathen)

def Video_GlobalExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return Video_GlobalExcelEnd(builder)
