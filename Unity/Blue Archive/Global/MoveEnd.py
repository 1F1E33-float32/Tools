# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Global

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MoveEnd(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MoveEnd()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMoveEnd(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MoveEnd
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MoveEnd
    def NormalOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Global.Motion import Motion
            obj = Motion()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # MoveEnd
    def StandOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Global.Motion import Motion
            obj = Motion()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # MoveEnd
    def KneelOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Global.Motion import Motion
            obj = Motion()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def MoveEndStart(builder):
    builder.StartObject(3)

def Start(builder):
    MoveEndStart(builder)

def MoveEndAddNormalOffset(builder, normalOffset):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(normalOffset), 0)

def AddNormalOffset(builder, normalOffset):
    MoveEndAddNormalOffset(builder, normalOffset)

def MoveEndAddStandOffset(builder, standOffset):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(standOffset), 0)

def AddStandOffset(builder, standOffset):
    MoveEndAddStandOffset(builder, standOffset)

def MoveEndAddKneelOffset(builder, kneelOffset):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(kneelOffset), 0)

def AddKneelOffset(builder, kneelOffset):
    MoveEndAddKneelOffset(builder, kneelOffset)

def MoveEndEnd(builder):
    return builder.EndObject()

def End(builder):
    return MoveEndEnd(builder)
