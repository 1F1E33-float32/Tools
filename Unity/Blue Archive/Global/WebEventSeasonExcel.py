# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Global

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class WebEventSeasonExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WebEventSeasonExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWebEventSeasonExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # WebEventSeasonExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WebEventSeasonExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # WebEventSeasonExcel
    def Enabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WebEventSeasonExcel
    def StartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WebEventSeasonExcel
    def EndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WebEventSeasonExcel
    def LobbyBannerImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WebEventSeasonExcel
    def PopupTitleLocalizeKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WebEventSeasonExcel
    def StageEventUrl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WebEventSeasonExcel
    def LiveEventUrl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def WebEventSeasonExcelStart(builder):
    builder.StartObject(8)

def Start(builder):
    WebEventSeasonExcelStart(builder)

def WebEventSeasonExcelAddId(builder, id):
    builder.PrependInt64Slot(0, id, 0)

def AddId(builder, id):
    WebEventSeasonExcelAddId(builder, id)

def WebEventSeasonExcelAddEnabled(builder, enabled):
    builder.PrependBoolSlot(1, enabled, 0)

def AddEnabled(builder, enabled):
    WebEventSeasonExcelAddEnabled(builder, enabled)

def WebEventSeasonExcelAddStartDate(builder, startDate):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(startDate), 0)

def AddStartDate(builder, startDate):
    WebEventSeasonExcelAddStartDate(builder, startDate)

def WebEventSeasonExcelAddEndDate(builder, endDate):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(endDate), 0)

def AddEndDate(builder, endDate):
    WebEventSeasonExcelAddEndDate(builder, endDate)

def WebEventSeasonExcelAddLobbyBannerImage(builder, lobbyBannerImage):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(lobbyBannerImage), 0)

def AddLobbyBannerImage(builder, lobbyBannerImage):
    WebEventSeasonExcelAddLobbyBannerImage(builder, lobbyBannerImage)

def WebEventSeasonExcelAddPopupTitleLocalizeKey(builder, popupTitleLocalizeKey):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(popupTitleLocalizeKey), 0)

def AddPopupTitleLocalizeKey(builder, popupTitleLocalizeKey):
    WebEventSeasonExcelAddPopupTitleLocalizeKey(builder, popupTitleLocalizeKey)

def WebEventSeasonExcelAddStageEventUrl(builder, stageEventUrl):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(stageEventUrl), 0)

def AddStageEventUrl(builder, stageEventUrl):
    WebEventSeasonExcelAddStageEventUrl(builder, stageEventUrl)

def WebEventSeasonExcelAddLiveEventUrl(builder, liveEventUrl):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(liveEventUrl), 0)

def AddLiveEventUrl(builder, liveEventUrl):
    WebEventSeasonExcelAddLiveEventUrl(builder, liveEventUrl)

def WebEventSeasonExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return WebEventSeasonExcelEnd(builder)
